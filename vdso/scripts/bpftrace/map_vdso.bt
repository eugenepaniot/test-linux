#!/usr/bin/env bpftrace
/**
 * Rong Tao <rongtao@cestc.cn>
 * 2022.02.20
 * Tracing kprobe:map_vdso
 *
 * Every process create will call 'map_vdso' function
 */
#include <linux/kernel.h>
#if defined(CONFIG_X86_64)
// see arch/x86/include/asm/vdso.h
struct vdso_image {
	void *data;
	unsigned long size;   /* Always a multiple of PAGE_SIZE */
};
#else
# error "Unsupport arch, just x86_64 right now."
#endif

BEGIN
{
	printf("Tracing kprobe:map_vdso, hit ctrl-C to end.\n");
	printf("%-8s %-16s %-6s %-16s\n", "PID", "COMM", "SIZE", "ADDR");
}

kprobe:map_vdso
{
	$vdso_image = (struct vdso_image*)arg0;
	$addr = arg1;
	printf("%-8d %-16s %-6d %-16lx\n", tid, comm, $vdso_image->size, $addr);

	/**
	 * @map_vdso_kstack[
	 *     map_vdso+1
	 *     load_elf_binary+2665
	 *     search_binary_handler+210
	 *     exec_binprm+81
	 *     bprm_execve.part.0+364
	 *     do_execveat_common.isra.0+342
	 *    __x64_sys_execve+51
	 *    do_syscall_64+56
	 *    entry_SYSCALL_64_after_hwframe+68
	 * ]: 2
	 */
	@map_vdso_kstack[kstack] = count();
}

END
{
	printf("Bye.\n");
}

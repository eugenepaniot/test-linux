#!/usr/bin/bpftrace

// 荣涛 2021年6月3日
//
// 目前代码有问题
//[root@localhost study]# ./ttysnoop.bt pts1
//./ttysnoop.bt:17:2-7: ERROR: $1 used numerically but given "pts1". Try using str($1).

#include <uapi/linux/ptrace.h>
#include <linux/fs.h>
#include <linux/uio.h>
#include <linux/version.h>

BEGIN
{
	if($# == 0) {
		printf("USAGE: ttysnoop.bt pts_device # eg, pts14.\n");
		exit();
	}

	printf("Tracing tty write. Ctrl-C to end.\n");
}

/**
 * 5.10.11
 *	ssize_t tty_write(struct kiocb *, struct iov_iter *);
 *
 * 5.10.10
 * 5.10
 * 5.9.16
 * 5.8.18
 * 4.18.20
 *	ssize_t tty_write(struct file *, const char __user *, size_t, loff_t *);
 */
/*
kprobe:tty_write
{
	$file = (struct file *)arg0;
	//+3 skips "pts"
	if(str($file->f_path.dentry->d_name.name) == str($1 + 3)) {
		printf("%s", str(arg1, arg2));
	}
}
*/
kprobe:tty_write
{
	$iocb = (struct kiocb *)arg0;
	$iov_iter = (struct iov_iter *)arg1;

	@filp[tid] = $iocb->ki_filp;
	@i_ino[tid] = $iocb->ki_filp->f_inode->i_ino;
	@iter_type[tid] = $iov_iter->iter_type;
	@data_source[tid] = $iov_iter->data_source;

	@kvec_map[tid] = $iov_iter->kvec;
	@ccc[@i_ino[tid]] = count();
	@fff[str(@filp[tid]->f_path.dentry->d_name.name)] = count();
}

kretprobe:tty_write
/strncmp(str(@filp[tid]->f_path.dentry->d_name.name), str($1 + 3), 1) &&
		@iter_type[tid] == ITER_IOVEC && @data_source[tid] == WRITE/
{
	$kvec = @kvec_map[tid];
	$buf = $kvec->iov_base;
	$count = $kvec->iov_len;

	/* TODO: 如何显示 */
	buf($buf, $count);
}

END
{
	clear(@filp);
	clear(@i_ino);
	clear(@iter_type);
	clear(@data_source);
	clear(@kvec_map);
}

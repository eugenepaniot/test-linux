#!/usr/bin/env bpftrace

#include <linux/stddef.h>
#include <linux/types.h>
#include <linux/list.h>
#include <linux/cache.h>

struct xlog_grant_head {
	spinlock_t		____cacheline_aligned_in_smp lock ;
	struct list_head	waiters;
	atomic64_t		grant;
};

BEGIN
{
	printf("Tracing XFS calls... Hit Ctrl-C to end.\n");

}

kprobe:xlog_grant_head_check
{
	@[func] = count();

	$grant_head = (struct xlog_grant_head *)arg1;
	$waiters = $grant_head->waiters;

	/**
	 *	if $waiters.prev == $waiters.next, means $waiters is empty.
	 */
	printf("%-8d %-16s %-16s (%p %p %p)\n", pid, comm, probe, $waiters.prev, $waiters.next, $grant_head);
	printf("%s\n", kstack);
}

END
{
	printf("Bye.\n");
}
